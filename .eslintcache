[{"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\App.js":"1","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\reportWebVitals.js":"2","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\AddForm.js":"3","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\index.js":"4","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\TodoItem.js":"5","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\Modal.js":"6","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\FilmList.js":"7"},{"size":3629,"mtime":1612700678645,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611145512912,"results":"10","hashOfConfig":"9"},{"size":1816,"mtime":1612620744386,"results":"11","hashOfConfig":"9"},{"size":672,"mtime":1612603830808,"results":"12","hashOfConfig":"9"},{"size":6399,"mtime":1612697400634,"results":"13","hashOfConfig":"9"},{"size":1490,"mtime":1612641873817,"results":"14","hashOfConfig":"9"},{"size":8342,"mtime":1612705416758,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vzwt92",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\App.js",[],"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\reportWebVitals.js",[],"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\AddForm.js",[],"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\index.js",[],"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\TodoItem.js",["31"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function ToDoItem(props) {\r\n    const {\r\n        d,\r\n        id,\r\n        onCheck,\r\n        // setData,\r\n        // show,\r\n        // handleShow,\r\n        // handleClose,\r\n        // add,\r\n        // data,\r\n        // clearAll,\r\n        // sumData,\r\n        // changeTitle,\r\n        // changeAutor,\r\n        // changeCat,\r\n        // changePri\r\n    } = props;\r\n    const defaultShow = false;\r\n    const [show, setShow] = useState(defaultShow);\r\n    const [editData, setEditData] = useState(d);\r\n    const [editedData, setEditedData] = useState({});\r\n    // console.log(d)\r\n    function showw() {\r\n        // console.log(editData)\r\n        handleShow()\r\n        return setEditData(d)\r\n\r\n    }\r\n    // console.log(editedData)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    function add() {\r\n        // let tab = [...sumData, data];\r\n        setShow(defaultShow);\r\n        return setEditedData(editData);\r\n    }\r\n\r\n    // Handle modal form values\r\n    const changeTitle = e => {\r\n        const { value } = e.target;\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            title: value.trim()\r\n        }))\r\n    };\r\n    const changeAutor = e => {\r\n        const { value } = e.target;\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            name: value\r\n        }))\r\n    }\r\n    const changeCat = e => {\r\n        const { value } = e.target;\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            category: value\r\n        }))\r\n    }\r\n    const changePri = e => {\r\n        const { value } = e.target;\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            priority: value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} data={d}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Dodaj film</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Control type=\"text\" placeholder={d.title} onChange={changeTitle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Control type=\"text\" placeholder={d.name} onChange={changeAutor} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Kategoria</Form.Label>\r\n                            <Form.Control as=\"select\" value={d.category} onChange={changeCat}>\r\n                                <option> </option>\r\n                                <option>Kryminał</option>\r\n                                <option>Science-fiction</option>\r\n                                <option>Fantasy</option>\r\n                                <option>Poezja</option>\r\n                                <option>Dramat</option>\r\n                                <option>Nauki ścisłe</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Priorytet</Form.Label>\r\n                            <Form.Control as=\"select\" value={d.priority} onChange={changePri}>\r\n                                <option> </option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Zamknij\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={add} >\r\n                        Zapisz\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* {editedData ? (\r\n                <>\r\n                    <tr>\r\n                        <td>{editedData.title}</td>\r\n                        <td>{editedData.name}</td>\r\n                        <td>{editedData.category}</td>\r\n                        <td>{editedData.priority}</td>\r\n                        <td>\r\n                            <FontAwesomeIcon className=\"icon-edit\" onClick={showw} icon={faEdit} />\r\n                            <FontAwesomeIcon className=\"icon-delete\" onClick={() => { onCheck(id) }} icon={faTrash} />\r\n                        </td>\r\n                    </tr>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <tr>\r\n                            <td>{d.title}</td>\r\n                            <td>{d.name}</td>\r\n                            <td>{d.category}</td>\r\n                            <td>{d.priority}</td>\r\n                            <td>\r\n                                <FontAwesomeIcon className=\"icon-edit\" onClick={showw} icon={faEdit} />\r\n                                <FontAwesomeIcon className=\"icon-delete\" onClick={() => { onCheck(id) }} icon={faTrash} />\r\n                            </td>\r\n                        </tr>\r\n                    </>\r\n                )} */}\r\n                     <tr>\r\n                            <td>{d.title}</td>\r\n                            <td>{d.name}</td>\r\n                            <td>{d.category}</td>\r\n                            <td>{d.priority}</td>\r\n                            <td>\r\n                                <FontAwesomeIcon className=\"icon-edit\" onClick={showw} icon={faEdit} />\r\n                                <FontAwesomeIcon className=\"icon-delete\" onClick={() => { onCheck(id) }} icon={faTrash} />\r\n                            </td>\r\n                        </tr>\r\n        </>\r\n    )\r\n};","C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\Modal.js",[],"C:\\Paweł Nowecki\\Paweł Priv\\Projekty\\app-todo\\src\\Components\\FilmList.js",[],{"ruleId":"32","severity":1,"message":"33","line":29,"column":12,"nodeType":"34","messageId":"35","endLine":29,"endColumn":22},"no-unused-vars","'editedData' is assigned a value but never used.","Identifier","unusedVar"]